{
  "title": {
    "zh": "中文分类",
    "en": "Category"
  },
  "demos": [
    {
      "filename": "basic.js",
      "title": {
        "zh": "基本使用",
        "en": "Basic usage"
      },
      "description": {
        "zh": "基本使用。\n",
        "en": "Basic usage example.\n"
      },
      "order": 0,
      "height": 129,
      "screenshot": ""
    },
    {
      "filename": "size.js",
      "title": {
        "zh": "三种大小",
        "en": "Three sizes of Input"
      },
      "description": {
        "zh": "我们为 `<Input />` 输入框定义了三种尺寸（大、默认、小），高度分别为 `40px`、`32px` 和 `24px`。\n\n注意： 在表单里面，我们只使用大尺寸的输入框。\n",
        "en": "There are three sizes of an Input box: `large` (40px)、`default` (32px) and `small` (24px).\n\nNote: Inside of forms, only the large size is used.\n"
      },
      "order": 1,
      "height": 249,
      "ignores": ["theme1", "theme3"],
      "screenshot": ""
    },
    {
      "filename": "addon.js",
      "title": {
        "zh": "前置/后置标签",
        "en": "Pre / Post tab"
      },
      "description": {
        "zh": "用于配置一些固定组合。\n",
        "en": "Using pre & post tabs example.\n"
      },
      "order": 2,
      "height": 219,
      "screenshot": ""
    },
    {
      "filename": "group.js",
      "title": {
        "zh": "输入框组合",
        "en": "Input Group"
      },
      "description": {
        "zh": "输入框的组合展现。\n\n注意：使用 `compact` 模式时，不需要通过 `Col` 来控制宽度。\n",
        "en": "Input.Group example\n\nNote: You don't need `Col` to control the width in the `compact` mode.\n"
      },
      "order": 3,
      "height": 214,
      "screenshot": ""
    },
    {
      "filename": "search-input.js",
      "title": {
        "zh": "搜索框",
        "en": "Search box"
      },
      "description": {
        "zh": "带有搜索按钮的输入框，`2.5.0` 时新增。\n",
        "en": "Example of creating a search box by grouping a standard input with a search button, added in `2.5.0`.\n"
      },
      "order": 4,
      "height": 129,
      "screenshot": ""
    },
    {
      "filename": "textarea.js",
      "title": {
        "zh": "文本域",
        "en": "TextArea"
      },
      "description": {
        "zh": "用于多行输入。\n",
        "en": "For multi-line input.\n"
      },
      "order": 5,
      "height": 193,
      "screenshot": ""
    },
    {
      "filename": "autosize-textarea.js",
      "title": {
        "zh": "适应文本高度的文本域",
        "en": "Autosizing the height to fit the content"
      },
      "description": {
        "zh": "`autosize` 属性适用于 `textarea` 节点，并且只有高度会自动变化。另外 `autosize` 可以设定为一个对象，指定最小行数和最大行数。\n",
        "en": "`autosize` prop for a `textarea` type of `Input` makes the height to automatically adjust based on the content. An options object can be provided to `autosize` to specify the minimum and maximum number of lines the textarea will automatically adjust.\n"
      },
      "order": 6,
      "height": 559,
      "screenshot": ""
    },
    {
      "filename": "tooltip.js",
      "title": {
        "zh": "输入时格式化展示",
        "en": "Format Tooltip Input"
      },
      "description": {
        "zh": "结合 [Tooltip](/components/tooltip) 组件，实现一个数值输入框，方便内容超长时的全量展现。\n",
        "en": "You can use the Input in conjunction with [Tooltip](/components/tooltip) component to create a Numeric Input, which can provide a good experience for extra-long content display.\n"
      },
      "order": 7,
      "height": 189,
      "screenshot": ""
    },
    {
      "filename": "presuffix.js",
      "title": {
        "zh": "前缀和后缀",
        "en": "prefix and suffix"
      },
      "description": {
        "zh": "在输入框上添加前缀或后缀图标。\n",
        "en": "Add prefix or suffix icons inside input.\n"
      },
      "order": 8,
      "height": 129,
      "screenshot": ""
    },
    {
      "filename": "password.js",
      "title": {
        "zh": "密码输入框",
        "en": "Password Input"
      },
      "description": {
        "zh": "密码输入框\n",
        "en": "password input\n"
      },
      "order": 9,
      "height": 129,
      "screenshot": ""
    }
  ]
}
